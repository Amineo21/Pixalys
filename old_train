import torch
import torch.nn as nn
from torchvision import models, transforms
from torch.utils.data import DataLoader
from dataset import CompCarsDataset

# Chemins
root_dir = 'CompCars/image'
split_file = 'CompCars/train_test_split/classification_clean/train_all_clean.txt'

# Transformations
transform = transforms.Compose([
    transforms.Resize((224, 224)),
    transforms.ToTensor(),
    transforms.Normalize(mean=[0.485, 0.456, 0.406],
                         std=[0.229, 0.224, 0.225])
])

# Dataset et DataLoader
train_dataset = CompCarsDataset(root_dir=root_dir, split_file=split_file, transform=transform)
train_loader = DataLoader(train_dataset, batch_size=32, shuffle=True)

# Charger modèle ResNet50 pré-entraîné ImageNet
weights = models.ResNet50_Weights.DEFAULT
model = models.resnet50(weights=weights)

# Geler toutes les couches
for param in model.parameters():
    param.requires_grad = False

# Remplacer la dernière couche fc par une couche adaptée au nb de classes
num_classes = len(train_dataset.class_to_idx)
model.fc = nn.Linear(model.fc.in_features, num_classes)

# Débloquer uniquement la dernière couche fc
for param in model.fc.parameters():
    param.requires_grad = True

# Device (GPU si dispo)
device = torch.device('cuda' if torch.cuda.is_available() else 'cpu')
model = model.to(device)

criterion = nn.CrossEntropyLoss()
optimizer = torch.optim.Adam(model.fc.parameters(), lr=0.001)

print(f"Nombre de classes : {num_classes}")
print(f"Démarrage de l'entraînement sur {device} pour 10 époques...")

# Entraînement
model.train()
for epoch in range(10):
    running_loss = 0.0
    for images, labels in train_loader:
        images = images.to(device)
        labels = labels.to(device)

        outputs = model(images)
        loss = criterion(outputs, labels)

        optimizer.zero_grad()
        loss.backward()
        optimizer.step()

        running_loss += loss.item()

    print(f"Epoch {epoch+1}/10 - Loss: {running_loss/len(train_loader):.4f}")

# Sauvegarder le modèle
torch.save(model.state_dict(), 'resnet50_compcars.pth')
print("Modèle sauvegardé dans resnet50_compcars.pth")
